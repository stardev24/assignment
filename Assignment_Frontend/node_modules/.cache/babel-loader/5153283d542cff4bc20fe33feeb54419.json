{"ast":null,"code":"var _jsxFileName = \"/home/sai/Pictures/Powerschool_Assignment_Frontend/assignment_frontend/src/components/Search_functional.js\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport CustomDebounce from '../utils/debounce';\n\nfunction SearchBar() {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const deboundSearch = CustomDebounce(searchTerm, 300); //This will set delay to our search\n\n  console.log(\"Debounced search term  -\", deboundSearch);\n  useEffect(() => {\n    if (deboundSearch) {\n      // Call countries API \n      searchCountries(deboundSearch).then(results => {\n        // Set results in react state\n        setSearchResults(results);\n      });\n    } else {\n      setSearchResults([]);\n    }\n  }, [deboundSearch]);\n\n  const searchCountries = code => {\n    return fetch(`http://localhost:5000/api/search`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: code\n      })\n    }).then(response => response.json()).then(responseObj => {\n      return responseObj;\n    }).catch(error => {\n      console.error(error);\n      return [];\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: searchResults,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 500\n    },\n    onInputChange: e => handleChange(e),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Countries\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 46\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/sai/Pictures/Powerschool_Assignment_Frontend/assignment_frontend/src/components/Search_functional.js"],"names":["React","useEffect","ReactDOM","axios","TextField","Autocomplete","Grid","CustomDebounce","SearchBar","searchTerm","setSearchTerm","useState","searchResults","setSearchResults","handleChange","event","target","value","handleInputChange","deboundSearch","console","log","searchCountries","then","results","code","fetch","method","headers","body","JSON","stringify","query","response","json","responseObj","catch","error","option","title","width","e","params"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport CustomDebounce from '../utils/debounce'\n\nfunction SearchBar() {\n\n const [searchTerm, setSearchTerm] = React.useState(\"\");\n const [searchResults, setSearchResults] = React.useState([]);\n const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\nconst handleInputChange = (event) => {\n\n    setSearchTerm(event.target.value)\n}\n\nconst deboundSearch = CustomDebounce(searchTerm,300); //This will set delay to our search\n\nconsole.log(\"Debounced search term  -\",deboundSearch)\n\nuseEffect(() => {\n\n    if (deboundSearch) {\n        // Call countries API \n        searchCountries(deboundSearch).then((results)=>{\n            // Set results in react state\n            setSearchResults(results);\n        })\n      } else {\n        setSearchResults([]);\n    }\n  }, [deboundSearch]);\n\n\n  const searchCountries = (code) => {\n    return fetch(\n        `http://localhost:5000/api/search`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({query:code}) \n        }\n      )\n        .then(response => response.json())\n        .then((responseObj) => {\n            return responseObj\n        })\n        .catch(error => {\n          console.error(error);\n          return [];\n        });\n\n   } \n\n   return (\n       <Grid \n       container\n       direction=\"row\"\n       justify=\"center\"\n       alignItems=\"center\">\n\n                <Autocomplete\n                    id=\"combo-box-demo\"\n                    options={searchResults}\n                    getOptionLabel={(option) => option.title}\n                    style={{ width: 500 }}\n                    onInputChange={(e)=> handleChange(e)}\n                    renderInput={(params) => <TextField {...params} label=\"Countries\" variant=\"outlined\" />}\n                />\n    </Grid>\n   )\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/sai/Pictures/Powerschool_Assignment_Frontend/assignment_frontend/src/components/Search_functional.js\";\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport CustomDebounce from '../utils/debounce';\n\nfunction SearchBar() {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const deboundSearch = CustomDebounce(searchTerm, 300); //This will set delay to our search\n\n  console.log(\"Debounced search term  -\", deboundSearch);\n  useEffect(() => {\n    if (deboundSearch) {\n      // Call countries API \n      searchCountries(deboundSearch).then(results => {\n        // Set results in react state\n        console.log(\"----->\", results);\n        console.log(\"-000---\", typeof results); //setSearchResults(results);\n      });\n    } else {\n      setSearchResults([]);\n    }\n  }, [deboundSearch]);\n\n  const searchCountries = code => {\n    return fetch(`http://localhost:5000/api/search`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: code\n      })\n    }).then(r => r.json()).then(r => {\n      console.log(\"Final respones -->\", r);\n      return r;\n    }).catch(error => {\n      console.error(error);\n      return [];\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: searchResults,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 500\n    },\n    onInputChange: e => handleChange(e),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Countries\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 34\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/sai/Pictures/Powerschool_Assignment_Frontend/assignment_frontend/src/components/Search_functional.js"],"names":["React","useEffect","ReactDOM","axios","TextField","Autocomplete","Grid","CustomDebounce","SearchBar","searchTerm","setSearchTerm","useState","searchResults","setSearchResults","handleChange","event","target","value","handleInputChange","deboundSearch","console","log","searchCountries","then","results","code","fetch","method","headers","body","JSON","stringify","query","r","json","catch","error","option","title","width","e","params"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport CustomDebounce from '../utils/debounce'\n\nfunction SearchBar() {\n\n const [searchTerm, setSearchTerm] = React.useState(\"\");\n const [searchResults, setSearchResults] = React.useState([]);\n const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\nconst handleInputChange = (event) => {\n\n    setSearchTerm(event.target.value)\n}\n\nconst deboundSearch = CustomDebounce(searchTerm,300); //This will set delay to our search\n\nconsole.log(\"Debounced search term  -\",deboundSearch)\n\nuseEffect(() => {\n\n    if (deboundSearch) {\n        // Call countries API \n        searchCountries(deboundSearch).then((results)=>{\n            // Set results in react state\n            console.log(\"----->\",results)\n            console.log(\"-000---\",typeof(results))\n            //setSearchResults(results);\n        })\n      } else {\n        setSearchResults([]);\n    }\n  }, [deboundSearch]);\n\n\n  const searchCountries = (code) => {\n\n    return fetch(\n        `http://localhost:5000/api/search`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({query:code}) \n        }\n      )\n        .then(r => r.json())\n        .then((r) => {\n            console.log(\"Final respones -->\",r)\n            return r\n        })\n        .catch(error => {\n          console.error(error);\n          return [];\n        });\n\n   } \n\n   return (\n       <>\n        <Autocomplete\n        id=\"combo-box-demo\"\n        options={searchResults}\n        getOptionLabel={(option) => option.title}\n        style={{ width: 500 }}\n        onInputChange={(e)=> handleChange(e)}\n        renderInput={(params) => <TextField {...params} label=\"Countries\" variant=\"outlined\" />}\n    />\n    </>\n   )\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}